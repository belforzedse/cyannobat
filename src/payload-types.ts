/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    providers: Provider;
    services: Service;
    appointments: Appointment;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    providers: ProvidersSelect<false> | ProvidersSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    appointments: AppointmentsSelect<false> | AppointmentsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "providers".
 */
export interface Provider {
  id: string;
  account: {
    relationTo: 'users';
    value: string | User;
  };
  displayName: string;
  slug?: string | null;
  headline?: string | null;
  bio?: unknown;
  specialties?:
    | {
        id?: string | null;
        label: string;
        description?: string | null;
      }[]
    | null;
  contact?: {
    email?: string | null;
    phone?: string | null;
    website?: string | null;
  } | null;
  location?: {
    address?: string | null;
    city?: string | null;
    region?: string | null;
    postalCode?: string | null;
    country?: string | null;
    timeZone?: string | null;
  } | null;
  availability?: {
    defaultDurationMinutes?: number | null;
    windows?:
      | {
          id?: string | null;
          day?:
            | 'monday'
            | 'tuesday'
            | 'wednesday'
            | 'thursday'
            | 'friday'
            | 'saturday'
            | 'sunday'
            | null;
          startTime?: string | null;
          endTime?: string | null;
        }[]
      | null;
  } | null;
  services?:
    | {
        relationTo: 'services';
        value: string | Service;
      }[]
    | null;
  profileImage?: string | Media | null;
  meta?: {
    rating?: number | null;
    reviewCount?: number | null;
    languages?:
      | {
          id?: string | null;
          language: string;
        }[]
      | null;
  } | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: string;
  title: string;
  slug?: string | null;
  category?: string | null;
  description?: unknown;
  providers?:
    | {
        relationTo: 'providers';
        value: string | Provider;
      }[]
    | null;
  durationMinutes: number;
  bufferMinutesBefore?: number | null;
  bufferMinutesAfter?: number | null;
  pricing?: {
    amount: number;
    currency: 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AUD';
    taxRate?: number | null;
  } | null;
  isActive?: boolean | null;
  leadTimeHours?: number | null;
  instructions?: string | null;
  media?: (string | Media)[] | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "appointments".
 */
export interface Appointment {
  id: string;
  reference?: string | null;
  client: {
    relationTo: 'users';
    value: string | User;
  };
  provider: {
    relationTo: 'providers';
    value: string | Provider;
  };
  service: {
    relationTo: 'services';
    value: string | Service;
  };
  status: 'pending' | 'confirmed' | 'in_progress' | 'completed' | 'cancelled' | 'no_show';
  schedule: {
    start: string;
    end: string;
    timeZone: string;
    location?: string | null;
    bufferBefore?: number | null;
    bufferAfter?: number | null;
    durationMinutes?: number | null;
  };
  pricingSnapshot: {
    amount: number;
    currency: 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AUD';
    durationMinutes?: number | null;
    taxRate?: number | null;
  };
  clientNotes?: string | null;
  internalNotes?: string | null;
  cancellation?: {
    cancelledAt?: string | null;
    reason?: string | null;
  } | null;
  reminders?:
    | {
        id?: string | null;
        sentAt?: string | null;
        channel?: 'email' | 'sms' | 'push' | null;
        status?: 'scheduled' | 'sent' | 'failed' | null;
      }[]
    | null;
  metadata?: {
    [k: string]: unknown;
  } | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "providers_select".
 */
export interface ProvidersSelect<T extends boolean = true> {
  account?: T;
  displayName?: T;
  slug?: T;
  headline?: T;
  bio?: T;
  specialties?:
    | T
    | {
        id?: T;
        label?: T;
        description?: T;
      };
  contact?: T;
  location?: T;
  availability?:
    | T
    | {
        defaultDurationMinutes?: T;
        windows?:
          | T
          | {
              id?: T;
              day?: T;
              startTime?: T;
              endTime?: T;
            };
      };
  services?: T;
  profileImage?: T;
  meta?:
    | T
    | {
        rating?: T;
        reviewCount?: T;
        languages?:
          | T
          | {
              id?: T;
              language?: T;
            };
      };
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?: T;
  description?: T;
  providers?: T;
  durationMinutes?: T;
  bufferMinutesBefore?: T;
  bufferMinutesAfter?: T;
  pricing?:
    | T
    | {
        amount?: T;
        currency?: T;
        taxRate?: T;
      };
  isActive?: T;
  leadTimeHours?: T;
  instructions?: T;
  media?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "appointments_select".
 */
export interface AppointmentsSelect<T extends boolean = true> {
  reference?: T;
  client?: T;
  provider?: T;
  service?: T;
  status?: T;
  schedule?:
    | T
    | {
        start?: T;
        end?: T;
        timeZone?: T;
        location?: T;
        bufferBefore?: T;
        bufferAfter?: T;
        durationMinutes?: T;
      };
  pricingSnapshot?:
    | T
    | {
        amount?: T;
        currency?: T;
        durationMinutes?: T;
        taxRate?: T;
      };
  clientNotes?: T;
  internalNotes?: T;
  cancellation?:
    | T
    | {
        cancelledAt?: T;
        reason?: T;
      };
  reminders?:
    | T
    | {
        id?: T;
        sentAt?: T;
        channel?: T;
        status?: T;
      };
  metadata?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}